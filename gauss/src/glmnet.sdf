/*
** glmnetControl
**
** Members
**
**    alpha         The elasticnet mixing parameter. 0 <= alpha <= 1.
**                  (1 - alpha) * L2 + alpha * L1. alpha = 1 for LASSO.
**                  alpha = 0 for Ridge. Default = 1.
**
**    nlam          Maximum number of lambda values. Default = 100.
**                  Note this will be ignored if specific 'lambdas' are supplied.
**
**    weights       Observation weights.
**
**    penalties     1xP vector, relative penalty for each predictor.
**
**    standardize   1 to standardize predictors before estimation, 0 to use
**                  unstandardized predictors. Parameter estimates are always
**                  returned in terms of unstandardized parameters. Default = 1.
**                  11/27/2018 -- currently unused. Set to 1 in the CPP code.
**
**    lambdas       User supplied lambda values. If set, 'nlam' will be ignored.
**                  Not recommended for use.
**
**    threshold     Convergence threshold for each lambda solution. Default = 1e-5. 
**                  Iterations stop when the maximum reduction in the criterion value
**                  as a result of each parameter update over a single pass
**                  is less than 'threshold' times the null criterion value.
**
**    largest       Maximum number of variables allowed to enter the model. Default is all predictors.
**
**    flmin         if flmin < 1.0:
**                      Minimum lamda = flmin*(largest lamda value)
**                  if flmin >= 1.0:
**                      Use supplied lambda values (see 'lambdas' member above). Default = 0.001.
**
**    exclude       Variables, columns of 'X', to exclude from consideration for the model.
**
**
*/
struct glmnetControl {
   matrix largest;
   scalar threshold;
   matrix weights;
   matrix penalties;
   scalar standardize;
   matrix exclude;
   matrix lambdas;
   scalar flmin;
   scalar nlam;
   scalar alpha;
};

/*
** glmnetResult
**
** Members
**
** n_lambdas     Scalar, the number of lambda values for which the model was estimated.
** intercept     1 x n_lambdas vector, containing the intercept estimate for each lambda.
** betas         P x n_lambdas matrix, containing the parameter estimates for each lambda.
** r_sqaured     n_lambdas x 1 vector, containing the r_squared for each estimated model.
** lambdas       n_lambdas x 1 vector, containing the values of the lambda path.
** mse           mean squared error, currently not used.
** df            n_lambdas x 1 vector, the degrees of freedom for each estimated model.
*/

struct glmnetResult {
   scalar n_lambdas;
   matrix intercept;
   matrix betas;
   matrix r_squared;
   matrix lambdas;
   matrix mse;
   matrix df;
};
